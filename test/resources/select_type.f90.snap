>
>! ------------------------------------------------------------------------------
#^ source.fortran.free comment.line.fortran
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.fortran.free comment.line.fortran
>!
#^ source.fortran.free comment.line.fortran
>!  Tests the syntax highlighting of nested type select constructs is correct
#^ source.fortran.free comment.line.fortran
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.fortran.free comment.line.fortran
>!-------------------------------------------------------------------------------
#^ source.fortran.free comment.line.fortran
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.fortran.free comment.line.fortran
>
>program select_type_test
#^^^^^^^ source.fortran.free meta.program.fortran keyword.control.program.fortran
#       ^ source.fortran.free meta.program.fortran
#        ^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran entity.name.program.fortran
>   implicit none
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.statement.implicit.fortran keyword.other.implicit.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.statement.implicit.fortran
#            ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.statement.implicit.fortran keyword.other.none.fortran
>
>
>   type :: point
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#        ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.operator.double-colon.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#           ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>      real :: x, y
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran
#      ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran storage.type.real.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#           ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   end type point
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#   ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.endtype.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#            ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>
>   type, extends(point) :: point_3d
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran punctuation.comma.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#         ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran storage.modifier.extends.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                 ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran entity.name.type.fortran
#                      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                        ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.operator.double-colon.fortran
#                          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#                           ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>      real :: z
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran
#      ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran storage.type.real.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#           ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   end type point_3d
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#   ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.endtype.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#            ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>
>   type, extends(point) :: color_point
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran punctuation.comma.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#         ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran storage.modifier.extends.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                 ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran entity.name.type.fortran
#                      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.attribute-list.fortran
#                        ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.operator.double-colon.fortran
#                          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#                           ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>      integer :: color
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran
#      ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran storage.type.integer.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#              ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                 ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   end type color_point
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#   ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran keyword.control.endtype.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran
#            ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.derived-type.definition.fortran entity.name.type.fortran
>
>   type(point_3d), target :: p3
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran storage.type.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.left.fortran
#        ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran entity.name.type.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.right.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran punctuation.comma.fortran
#                  ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                   ^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran storage.modifier.target.fortran
#                         ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                          ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#                            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                             ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   type(color_point), target :: c
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran storage.type.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.left.fortran
#        ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran entity.name.type.fortran
#                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.right.fortran
#                    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran punctuation.comma.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                      ^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran storage.modifier.target.fortran
#                            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                             ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#                               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   class(point), pointer :: p_or_c
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran storage.type.class.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.left.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran entity.name.type.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.right.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran punctuation.comma.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                 ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran storage.modifier.pointer.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                         ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#                           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                            ^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>   class(point), pointer :: p
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran storage.type.class.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.left.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran entity.name.type.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.specification.type.derived.fortran punctuation.parentheses.right.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran punctuation.comma.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                 ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran storage.modifier.pointer.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.attribute-list.fortran
#                         ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran keyword.operator.double-colon.fortran
#                           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran
#                            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.specification.type.fortran meta.name-list.fortran meta.parameter.fortran
>
>   p_or_c => c
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.parameter.fortran
#         ^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#          ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran keyword.other.point.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.parameter.fortran
>   p => p3
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.parameter.fortran
#    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#     ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran keyword.other.point.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#        ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.parameter.fortran
>   select type ( a => p_or_c )
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran
#   ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.selecttype.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                  ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                   ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.other.point.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                      ^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>   class is ( point )
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#   ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.class.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#         ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.is.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#              ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>      ! "class ( point ) :: a" implied here
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
>      print *, a%x, a%y ! this block executes
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.print.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#             ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran keyword.other.selector.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                  ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran keyword.other.selector.fortran
#                      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
#                         ^^^^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
>      select type(a)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.selecttype.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                  ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>      type is (point_3d)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.type.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#           ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.is.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#               ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>         print*, "type(point_3d)"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      type is (color_point)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.type.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#           ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.is.fortran
#             ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#               ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>         print*, "type(color_point)"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      class default
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.class.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#            ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.default.fortran
>         print*, "no matching type"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                  ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      end select
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.endselect.fortran
>
>   class is (color_point)  ! does not execute
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#   ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.class.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#         ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.is.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#             ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
#                         ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
#                            ^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
>      select type(p)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.selecttype.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                  ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>      class is (point_3d)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.class.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#            ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.is.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>         print*, "class(point_3d)"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      class is (color_point)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.class.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#            ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.is.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                ^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>         print*, "class(color_point)"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      class is (point)
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.class.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#            ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.is.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#                ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran meta.parameter.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
>         print*, "class(point)"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      class default
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.class.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#            ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.default.fortran
>         print*, "no matching class"
#^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#         ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.print.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#               ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#                  ^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                   ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>      end select
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran
#      ^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.block.select.type.fortran keyword.control.endselect.fortran
>
>   type is ( point_3d ) ! does not execute
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#   ^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.type.fortran
#       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#        ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.is.fortran
#          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.left.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#             ^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran punctuation.parentheses.right.fortran
#                       ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
#                         ^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
>      ! "type ( point_3d ) :: a" implied here
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran comment.line.fortran
>      print *, a%x, a%y, a%z
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.print.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#            ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#             ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#               ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran keyword.other.selector.fortran
#                 ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                  ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                    ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                     ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran keyword.other.selector.fortran
#                      ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                       ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#                         ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
#                          ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran keyword.other.selector.fortran
#                           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran meta.parameter.fortran
>   class default
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#   ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.class.fortran
#        ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#         ^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.default.fortran
>      print*, "no matching class"
#^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#      ^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.print.fortran
#           ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.operator.power.fortran
#            ^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#              ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.begin.fortran
#               ^^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran string.quoted.double.fortran
#                                ^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran string.quoted.double.fortran punctuation.definition.string.end.fortran
>   end select
#^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran
#   ^^^^^^^^^^ source.fortran.free meta.program.fortran meta.block.specification.fortran meta.block.select.type.fortran keyword.control.endselect.fortran
>
>
>end program select_type_test
#^^^^^^^^^^^ source.fortran.free meta.program.fortran keyword.control.endprogram.fortran
#           ^ source.fortran.free meta.program.fortran
#            ^^^^^^^^^^^^^^^^ source.fortran.free meta.program.fortran entity.name.program.fortran