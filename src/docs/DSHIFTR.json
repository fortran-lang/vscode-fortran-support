{"keyword":"DSHIFTR","docstr":"`DSHIFTR` â€” Combined right shift\n\n### Description\n`DSHIFTR(I, J, SHIFT)` combines bits of `I` and `J`. The\nleftmost `SHIFT` bits of the result are the rightmost `SHIFT`\nbits of `I`, and the remaining bits are the leftmost bits of\n`J`.\n\n\n\n### Syntax\n`RESULT = DSHIFTR(I, J, SHIFT)`\n\n\n### Arguments\n\n     \n or a BOZ constant. \n\n | `J`  | Shall be of type `INTEGER` or a BOZ constant. \nIf both `I` and `J` have integer type, then they shall have\nthe same kind type parameter. `I` and `J` shall not both be\nBOZ constants. \n\n | `SHIFT`  | Shall be of type `INTEGER`. It shall\nbe nonnegative.  If `I` is not a BOZ constant, then `SHIFT`\nshall be less than or equal to `BIT_SIZE(I)`; otherwise,\n`SHIFT` shall be less than or equal to `BIT_SIZE(J)`.\n\n\n\n\n\n\n### Return value\nIf either `I` or `J` is a BOZ constant, it is first converted\nas if by the intrinsic function `INT` to an integer type with the\nkind type parameter of the other.\n\n\n\n### Standard\nFortran 2008 and later\n\n\n\n### Class\nElemental function\n\n\n\n### See also\n<a href=\"DSHIFTL.html#DSHIFTL\">DSHIFTL</a>\n"}