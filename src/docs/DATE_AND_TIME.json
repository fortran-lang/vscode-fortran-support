{"keyword":"DATE_AND_TIME","docstr":"`DATE_AND_TIME` — Date and time subroutine\n\n### Description\n`DATE_AND_TIME(DATE, TIME, ZONE, VALUES)` gets the corresponding date and\ntime information from the real-time system clock.  `DATE` is\n`INTENT(OUT)` and has form ccyymmdd.  `TIME` is `INTENT(OUT)` and\nhas form hhmmss.sss.  `ZONE` is `INTENT(OUT)` and has form (+-)hhmm,\nrepresenting the difference with respect to Coordinated Universal Time (UTC). \nUnavailable time and date parameters return blanks.\n\n     \n`VALUES` is `INTENT(OUT)` and provides the following:\n\n     \n\n:  | The year\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(2)`:  | The month\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(3)`:  | The day of the month\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(4)`:  | Time difference with UTC in minutes\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(5)`:  | The hour of the day\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(6)`:  | The minutes of the hour\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(7)`:  | The seconds of the minute\n\n | </td><td valign=\"top\" width=\"30%\">`VALUE(8)`:  | The milliseconds of the second\n\n\n\n\n\n\n### Syntax\n`CALL DATE_AND_TIME([DATE, TIME, ZONE, VALUES])`\n\n\n### Arguments\n\n     \n\nor larger, and of default kind. \n\n | `TIME`   | (Optional) The type shall be `CHARACTER(LEN=10)`or larger, and of default kind. \n\n | `ZONE`   | (Optional) The type shall be `CHARACTER(LEN=5)`or larger, and of default kind. \n\n | `VALUES` | (Optional) The type shall be `INTEGER(8)`.\n\n\n\n\n\n\n### Return value\nNone\n\n\n\n### Example\n\n     ```\n\n\nprogram test_time_and_date\n\n    character(8)  :: date\n\n    character(10) :: time\n\n    character(5)  :: zone\n\n    integer,dimension(8) :: values\n\n    ! using keyword arguments\n\n    call date_and_time(date,time,zone,values)\n\n    call date_and_time(DATE=date,ZONE=zone)\n\n    call date_and_time(TIME=time)\n\n    call date_and_time(VALUES=values)\n\n    print '(a,2x,a,2x,a)', date, time, zone\n\n    print '(8i5)', values\n\nend program test_time_and_date\n\n```\n\n\n\n### Standard\nFortran 95 and later\n\n\n\n### Class\nSubroutine\n\n\n\n### See also\n<a href=\"CPU_005fTIME.html#CPU_005fTIME\">CPU_TIME</a>, <a href=\"SYSTEM_005fCLOCK.html#SYSTEM_005fCLOCK\">SYSTEM_CLOCK</a>\n"}