{"keyword":"DOT_PRODUCT","docstr":"`DOT_PRODUCT` — Dot product function\n\n### Description\n`DOT_PRODUCT(VECTOR_A, VECTOR_B)` computes the dot product multiplication\nof two vectors `VECTOR_A` and `VECTOR_B`.  The two vectors may be\neither numeric or logical and must be arrays of rank one and of equal size. If\nthe vectors are `INTEGER` or `REAL`, the result is\n`SUM(VECTOR_A*VECTOR_B)`. If the vectors are `COMPLEX`, the result\nis `SUM(CONJG(VECTOR_A)*VECTOR_B)`. If the vectors are `LOGICAL`,\nthe result is `ANY(VECTOR_A .AND. VECTOR_B)`.\n\n\n\n### Syntax\n`RESULT = DOT_PRODUCT(VECTOR_A, VECTOR_B)`\n\n\n### Arguments\n\n     \n, rank 1. \n\n | `VECTOR_B`  | The type shall be numeric if `VECTOR_A` is of numeric type or `LOGICAL` if `VECTOR_A` is of type `LOGICAL`. `VECTOR_B` shall be a rank-one array.\n\n\n\n\n\n\n### Return value\nIf the arguments are numeric, the return value is a scalar of numeric type,\n`INTEGER`, `REAL`, or `COMPLEX`.  If the arguments are\n`LOGICAL`, the return value is `.TRUE.` or `.FALSE.`.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_dot_prod\n\n    integer, dimension(3) :: a, b\n\n    a = (/ 1, 2, 3 /)\n\n    b = (/ 4, 5, 6 /)\n\n    print '(3i3)', a\n\n    print *\n\n    print '(3i3)', b\n\n    print *\n\n    print *, dot_product(a,b)\n\nend program test_dot_prod\n\n```\n\n     \n\n### Standard\nFortran 95 and later\n\n\n\n### Class\nTransformational function\n\n\n"}