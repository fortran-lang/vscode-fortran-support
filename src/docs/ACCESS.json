{"keyword":"ACCESS","docstr":"`ACCESS` — Checks file access modes\n\n### Description\n`ACCESS(NAME, MODE)` checks whether the file `NAME`\nexists, is readable, writable or executable. Except for the\nexecutable check, `ACCESS` can be replaced by\nFortran 95's `INQUIRE`.\n\n\n\n### Syntax\n`RESULT = ACCESS(NAME, MODE)`\n\n\n### Arguments\n\n     \n of default kind with the\nfile name. Tailing blank are ignored unless the character `achar(0)`is present, then all characters up to and excluding `achar(0)` are\nused as file name. \n\n | `MODE`  | Scalar `CHARACTER` of default kind with the\nfile access mode, may be any concatenation of `\"r\"` (readable),\n`\"w\"` (writable) and `\"x\"` (executable), or `\" \"` to check\nfor existence.\n\n\n\n\n\n\n### Return value\nReturns a scalar `INTEGER`, which is `0` if the file is\naccessible in the given mode; otherwise or if an invalid argument\nhas been given for `MODE` the value `1` is returned.\n\n\n\n### Example\n\n     ```\n\n\nprogram access_test\n\n  implicit none\n\n  character(len=*), parameter :: file  = 'test.dat'\n\n  character(len=*), parameter :: file2 = 'test.dat  '//achar(0)\n\n  if(access(file,' ') == 0) print *, trim(file),' is exists'\n\n  if(access(file,'r') == 0) print *, trim(file),' is readable'\n\n  if(access(file,'w') == 0) print *, trim(file),' is writable'\n\n  if(access(file,'x') == 0) print *, trim(file),' is executable'\n\n  if(access(file2,'rwx') == 0) &amp;\n\n    print *, trim(file2),' is readable, writable and executable'\n\nend program access_test\n\n```\n\n\n\n### Specific names\n\n\n\n### Standard\nGNU extension\n\n\n\n### Class\nInquiry function\n\n\n\n### See also\n\n"}