{"keyword":"C_ASSOCIATED","docstr":"`C_ASSOCIATED` — Status of a C pointer\n\n### Description\n`C_ASSOCIATED(c_ptr_1[, c_ptr_2])` determines the status of the C pointer\n`c_ptr_1` or if `c_ptr_1` is associated with the target `c_ptr_2`.\n\n\n\n### Syntax\n`RESULT = C_ASSOCIATED(c_ptr_1[, c_ptr_2])`\n\n\n### Arguments\n\n     \n. \n\n | `c_ptr_2`  | (Optional) Scalar of the same type as `c_ptr_1`.\n\n\n\n\n\n\n### Return value\nThe return value is of type `LOGICAL`; it is `.false.` if either\n`c_ptr_1` is a C NULL pointer or if `c_ptr1` and `c_ptr_2`\npoint to different addresses.\n\n\n\n### Example\n\n     ```\n\n\nsubroutine association_test(a,b)\n\n  use iso_c_binding, only: c_associated, c_loc, c_ptr\n\n  implicit none\n\n  real, pointer :: a\n\n  type(c_ptr) :: b\n\n  if(c_associated(b, c_loc(a))) &amp;\n\n     stop 'b and a do not point to same target'\n\nend subroutine association_test\n\n```\n\n\n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nInquiry function\n\n\n\n### See also\n<a href=\"C_005fLOC.html#C_005fLOC\">C_LOC</a>, <a href=\"C_005fFUNLOC.html#C_005fFUNLOC\">C_FUNLOC</a>\n"}