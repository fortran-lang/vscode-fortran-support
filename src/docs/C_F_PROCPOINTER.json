{"keyword":"C_F_PROCPOINTER","docstr":"`C_F_PROCPOINTER` — Convert C into Fortran procedure pointer\n\n### Description\n`C_F_PROCPOINTER(CPTR, FPTR)` Assign the target of the C function pointer\n`CPTR` to the Fortran procedure pointer `FPTR`.\n\n\n\n### Syntax\n`CALL C_F_PROCPOINTER(cptr, fptr)`\n\n\n### Arguments\n\n     \n. It is\n`INTENT(IN)`. \n\n | `FPTR`   | procedure pointer interoperable with `cptr`. It is\n`INTENT(OUT)`.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nprogram main\n\n  use iso_c_binding\n\n  implicit none\n\n  abstract interface\n\n    function func(a)\n\n      import :: c_float\n\n      real(c_float), intent(in) :: a\n\n      real(c_float) :: func\n\n    end function\n\n  end interface\n\n  interface\n\n     function getIterFunc() bind(c,name=\"getIterFunc\")\n\n       import :: c_funptr\n\n       type(c_funptr) :: getIterFunc\n\n     end function\n\n  end interface\n\n  type(c_funptr) :: cfunptr\n\n  procedure(func), pointer :: myFunc\n\n  cfunptr = getIterFunc()\n\n  call c_f_procpointer(cfunptr, myFunc)\n\nend program main\n\n```\n\n\n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nSubroutine\n\n\n\n### See also\n<a href=\"C_005fLOC.html#C_005fLOC\">C_LOC</a>, <a href=\"C_005fF_005fPOINTER.html#C_005fF_005fPOINTER\">C_F_POINTER</a>\n"}