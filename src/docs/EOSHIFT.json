{"keyword":"EOSHIFT","docstr":"`EOSHIFT` — End-off shift elements of an array\n\n### Description\n`EOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])` performs an end-off shift on\nelements of `ARRAY` along the dimension of `DIM`.  If `DIM` is\nomitted it is taken to be `1`.  `DIM` is a scalar of type\n`INTEGER` in the range of 1 \\leq DIM \\leq n) where n is the\nrank of `ARRAY`.  If the rank of `ARRAY` is one, then all elements of\n`ARRAY` are shifted by `SHIFT` places.  If rank is greater than one,\nthen all complete rank one sections of `ARRAY` along the given dimension are\nshifted.  Elements shifted out one end of each rank one section are dropped.  If\n`BOUNDARY` is present then the corresponding value of from `BOUNDARY`\nis copied back in the other end.  If `BOUNDARY` is not present then the\nfollowing are copied in depending on the type of `ARRAY`.\n\n     \n\n\n | Numeric   | 0 of the type and kind of `ARRAY`. \n\n | Logical   | `.FALSE.`. \n\n | Character(`len`)  | `len` blanks.\n\n\n\n\n\n\n### Syntax\n`RESULT = EOSHIFT(ARRAY, SHIFT [, BOUNDARY, DIM])`\n\n\n### Arguments\n\n     \n | `ARRAY`   | May be any type, not scalar. \n\n | `SHIFT`   | The type shall be `INTEGER`. \n\n | `BOUNDARY`  | Same type as `ARRAY`. \n\n | `DIM`     | The type shall be `INTEGER`.\n\n\n\n\n\n\n### Return value\nReturns an array of same type and rank as the `ARRAY` argument.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_eoshift\n\n    integer, dimension(3,3) :: a\n\n    a = reshape( (/ 1, 2, 3, 4, 5, 6, 7, 8, 9 /), (/ 3, 3 /))\n\n    print '(3i3)', a(1,:)\n\n    print '(3i3)', a(2,:)\n\n    print '(3i3)', a(3,:)\n\n    a = EOSHIFT(a, SHIFT=(/1, 2, 1/), BOUNDARY=-5, DIM=2)\n\n    print *\n\n    print '(3i3)', a(1,:)\n\n    print '(3i3)', a(2,:)\n\n    print '(3i3)', a(3,:)\n\nend program test_eoshift\n\n```\n\n     \n\n### Standard\nFortran 95 and later\n\n\n\n### Class\nTransformational function\n\n\n"}