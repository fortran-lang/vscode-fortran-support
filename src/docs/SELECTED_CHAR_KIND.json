{"keyword":"SELECTED_CHAR_KIND","docstr":"`SELECTED_CHAR_KIND` — Choose character kind\n\n### Description\n\n`SELECTED_CHAR_KIND(NAME)` returns the kind value for the character\nset named `NAME`, if a character set with such a name is supported,\nor -1 otherwise. Currently, supported character sets include\n“ASCII” and “DEFAULT”, which are equivalent, and “ISO_10646”\n(Universal Character Set, UCS-4) which is commonly known as Unicode.\n\n\n\n### Syntax\n`RESULT = SELECTED_CHAR_KIND(NAME)`\n\n\n### Arguments\n\n     \n | `NAME`  | Shall be a scalar and of the default character type.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nprogram character_kind\n\n  use iso_fortran_env\n\n  implicit none\n\n  integer, parameter :: ascii = selected_char_kind (\"ascii\")\n\n  integer, parameter :: ucs4  = selected_char_kind ('ISO_10646')\n\n\n  character(kind=ascii, len=26) :: alphabet\n\n  character(kind=ucs4,  len=30) :: hello_world\n\n\n  alphabet = ascii_\"abcdefghijklmnopqrstuvwxyz\"\n\n  hello_world = ucs4_'Hello World and Ni Hao -- ' &amp;\n\n                // char (int (z'4F60'), ucs4)     &amp;\n\n                // char (int (z'597D'), ucs4)\n\n\n  write (*,*) alphabet\n\n\n  open (output_unit, encoding='UTF-8')\n\n  write (*,*) trim (hello_world)\n\nend program character_kind\n\n```\n\n     \n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nTransformational function\n\n\n"}