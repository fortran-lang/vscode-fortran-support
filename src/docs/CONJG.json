{"keyword":"CONJG","docstr":"`CONJG` — Complex conjugate function\n\n### Description\n`CONJG(Z)` returns the conjugate of `Z`.  If `Z` is `(x, y)`then the result is `(x, -y)`\n\n\n### Syntax\n`Z = CONJG(Z)`\n\n\n### Arguments\n\n     \n.\n\n\n\n\n\n\n### Return value\nThe return value is of type `COMPLEX`.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_conjg\n\n    complex :: z = (2.0, 3.0)\n\n    complex(8) :: dz = (2.71_8, -3.14_8)\n\n    z= conjg(z)\n\n    print *, z\n\n    dz = dconjg(dz)\n\n    print *, dz\n\nend program test_conjg\n\n```\n\n\n\n### Specific names\n\n     \n | Name              | Argument              | Return type        | Standard\n\n | `CONJG(Z)`   | `COMPLEX Z`      | `COMPLEX`     | GNU extension\n\n | `DCONJG(Z)`  | `COMPLEX(8) Z`   | `COMPLEX(8)`  | GNU extension\n\n\n\n\n\n### Standard\nFortran 77 and later, has overloads that are GNU extensions\n\n\n\n### Class\nElemental function\n\n\n"}