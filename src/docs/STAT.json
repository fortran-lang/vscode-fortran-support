{"keyword":"STAT","docstr":"`STAT` — Get file status\n\n### Description\nThis function returns information about a file. No permissions are required on\nthe file itself, but execute (search) permission is required on all of the\ndirectories in path that lead to the file.\n\n     \nThe elements that are obtained and stored in the array `VALUES`:\n     \n\n    | Device ID\n\n | `VALUES(2)`    | Inode number\n\n | `VALUES(3)`    | File mode\n\n | `VALUES(4)`    | Number of links\n\n | `VALUES(5)`    | Owner's uid\n\n | `VALUES(6)`    | Owner's gid\n\n | `VALUES(7)`    | ID of device containing directory entry for file (0 if not available)\n\n | `VALUES(8)`    | File size (bytes)\n\n | `VALUES(9)`    | Last access time\n\n | `VALUES(10)`   | Last modification time\n\n | `VALUES(11)`   | Last file status change time\n\n | `VALUES(12)`   | Preferred I/O block size (-1 if not available)\n\n | `VALUES(13)`   | Number of blocks allocated (-1 if not available)\n\n\n\n     \n\nNot all these elements are relevant on all systems. \nIf an element is not relevant, it is returned as 0.\n\n     \n\nThis intrinsic is provided in both subroutine and function forms; however,\nonly one form can be used in any given program unit.\n\n\n\n\n### Syntax\n\n     \n\n\n | `STATUS = STAT(NAME, VALUES)`     <br>\n\n\n\n\n\n### Arguments\n\n     \n, of the\ndefault kind and a valid path within the file system. \n\n | `VALUES`  | The type shall be `INTEGER(4), DIMENSION(13)`. \n\n | `STATUS`  | (Optional) status flag of type `INTEGER(4)`. Returns 0\non success and a system specific error code otherwise.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nPROGRAM test_stat\n\n  INTEGER, DIMENSION(13) :: buff\n\n  INTEGER :: status\n\n\n  CALL STAT(\"/etc/passwd\", buff, status)\n\n\n  IF (status == 0) THEN\n\n    WRITE (*, FMT=\"('Device ID:',               T30, I19)\") buff(1)\n\n    WRITE (*, FMT=\"('Inode number:',            T30, I19)\") buff(2)\n\n    WRITE (*, FMT=\"('File mode (octal):',       T30, O19)\") buff(3)\n\n    WRITE (*, FMT=\"('Number of links:',         T30, I19)\") buff(4)\n\n    WRITE (*, FMT=\"('Owner''s uid:',            T30, I19)\") buff(5)\n\n    WRITE (*, FMT=\"('Owner''s gid:',            T30, I19)\") buff(6)\n\n    WRITE (*, FMT=\"('Device where located:',    T30, I19)\") buff(7)\n\n    WRITE (*, FMT=\"('File size:',               T30, I19)\") buff(8)\n\n    WRITE (*, FMT=\"('Last access time:',        T30, A19)\") CTIME(buff(9))\n\n    WRITE (*, FMT=\"('Last modification time',   T30, A19)\") CTIME(buff(10))\n\n    WRITE (*, FMT=\"('Last status change time:', T30, A19)\") CTIME(buff(11))\n\n    WRITE (*, FMT=\"('Preferred block size:',    T30, I19)\") buff(12)\n\n    WRITE (*, FMT=\"('No. of blocks allocated:', T30, I19)\") buff(13)\n\n  END IF\n\nEND PROGRAM\n\n```\n\n\n\n### Standard\nGNU extension\n\n\n\n### Class\nSubroutine, function\n\n\n\n### See also\nTo stat an open file: <a href=\"FSTAT.html#FSTAT\">FSTAT</a>, to stat a link: <a href=\"LSTAT.html#LSTAT\">LSTAT</a>\n"}