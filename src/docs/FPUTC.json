{"keyword":"FPUTC","docstr":"`FPUTC` — Write a single character in stream mode\n\n### Description\nWrite a single character in stream mode by bypassing normal formatted\noutput. Stream I/O should not be mixed with normal record-oriented\n(formatted or unformatted) I/O on the same unit; the results are unpredictable.\n\n     \nThis intrinsic is provided in both subroutine and function forms; however,\nonly one form can be used in any given program unit.\n\n     \n\nNote that the `FGET` intrinsic is provided for backwards compatibility with\n*g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \nProgrammers should consider the use of new stream IO feature in new code\nfor future portability. See also <a href=\"Fortran-2003-status.html#Fortran-2003-status\">Fortran 2003 status</a>.\n\n\n\n\n### Syntax\n\n     \n\n\n | `STATUS = FPUTC(UNIT, C)`     <br>\n\n\n\n\n\n### Arguments\n\n     \n. \n\n | `C`       | The type shall be `CHARACTER` and of default\nkind. \n\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \nReturns 0 on success, -1 on end-of-file and a system specific positive\nerror code otherwise.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nPROGRAM test_fputc\n\n  CHARACTER(len=10) :: str = \"gfortran\"\n\n  INTEGER :: fd = 42, i\n\n\n  OPEN(UNIT = fd, FILE = \"out\", ACTION = \"WRITE\", STATUS=\"NEW\")\n\n  DO i = 1, len_trim(str)\n\n    CALL fputc(fd, str(i:i))\n\n  END DO\n\n  CLOSE(fd)\n\nEND PROGRAM\n\n```\n\n\n\n### Standard\nGNU extension\n\n\n\n### Class\nSubroutine, function\n\n\n\n### See also\n<a href=\"FPUT.html#FPUT\">FPUT</a>, <a href=\"FGET.html#FGET\">FGET</a>, <a href=\"FGETC.html#FGETC\">FGETC</a>\n"}