{"keyword":"DCMPLX","docstr":"`DCMPLX` — Double complex conversion function\n\n### Description\n`DCMPLX(X [,Y])` returns a double complex number where `X` is\nconverted to the real component.  If `Y` is present it is converted to the\nimaginary component.  If `Y` is not present then the imaginary component is\nset to 0.0.  If `X` is complex then `Y` must not be present.\n\n\n\n### Syntax\n`RESULT = DCMPLX(X [, Y])`\n\n\n### Arguments\n\n     \n,\nor `COMPLEX`. \n\n | `Y`  | (Optional if `X` is not `COMPLEX`.) May be\n`INTEGER` or `REAL`.\n\n\n\n\n\n\n### Return value\nThe return value is of type `COMPLEX(8)`\n\n\n### Example\n\n     ```\n\n\nprogram test_dcmplx\n\n    integer :: i = 42\n\n    real :: x = 3.14\n\n    complex :: z\n\n    z = cmplx(i, x)\n\n    print *, dcmplx(i)\n\n    print *, dcmplx(x)\n\n    print *, dcmplx(z)\n\n    print *, dcmplx(x,i)\n\nend program test_dcmplx\n\n```\n\n     \n\n### Standard\nGNU extension\n\n\n\n### Class\nElemental function\n\n\n"}