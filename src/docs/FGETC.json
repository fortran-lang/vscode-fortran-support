{"keyword":"FGETC","docstr":"`FGETC` — Read a single character in stream mode\n\n### Description\nRead a single character in stream mode by bypassing normal formatted output. \nStream I/O should not be mixed with normal record-oriented (formatted or\nunformatted) I/O on the same unit; the results are unpredictable.\n\n     \nThis intrinsic is provided in both subroutine and function forms; however,\nonly one form can be used in any given program unit.\n\n     \n\nNote that the `FGET` intrinsic is provided for backwards compatibility\nwith *g77*.  GNU Fortran provides the Fortran 2003 Stream facility. \nProgrammers should consider the use of new stream IO feature in new code\nfor future portability. See also <a href=\"Fortran-2003-status.html#Fortran-2003-status\">Fortran 2003 status</a>.\n\n\n\n\n### Syntax\n\n     \n\n\n | `STATUS = FGETC(UNIT, C)`     <br>\n\n\n\n\n\n### Arguments\n\n     \n. \n\n | `C`       | The type shall be `CHARACTER` and of default\nkind. \n\n | `STATUS`  | (Optional) status flag of type `INTEGER`. \nReturns 0 on success, -1 on end-of-file and a system specific positive\nerror code otherwise.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nPROGRAM test_fgetc\n\n  INTEGER :: fd = 42, status\n\n  CHARACTER :: c\n\n\n  OPEN(UNIT=fd, FILE=\"/etc/passwd\", ACTION=\"READ\", STATUS = \"OLD\")\n\n  DO\n\n    CALL fgetc(fd, c, status)\n\n    IF (status /= 0) EXIT\n\n    call fput(c)\n\n  END DO\n\n  CLOSE(UNIT=fd)\n\nEND PROGRAM\n\n```\n\n\n\n### Standard\nGNU extension\n\n\n\n### Class\nSubroutine, function\n\n\n\n### See also\n<a href=\"FGET.html#FGET\">FGET</a>, <a href=\"FPUT.html#FPUT\">FPUT</a>, <a href=\"FPUTC.html#FPUTC\">FPUTC</a>\n"}