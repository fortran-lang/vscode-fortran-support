{"keyword":"C_SIZEOF","docstr":"`C_SIZEOF` â€” Size in bytes of an expression\n\n### Description\n`C_SIZEOF(X)` calculates the number of bytes of storage the\nexpression `X` occupies.\n\n\n\n### Syntax\n`N = C_SIZEOF(X)`\n\n\n### Arguments\n\n     \n | `X`  | The argument shall be an interoperable data entity.\n\n\n\n\n\n\n### Return value\nThe return value is of type integer and of the system-dependent kind\n`C_SIZE_T` (from the `ISO_C_BINDING` module). Its value is the\nnumber of bytes occupied by the argument.  If the argument has the\n`POINTER` attribute, the number of bytes of the storage area pointed\nto is returned.  If the argument is of a derived type with `POINTER`or `ALLOCATABLE` components, the return value does not account for\nthe sizes of the data pointed to by these components.\n\n\n\n### Example\n\n     ```\n\n\nuse iso_c_binding\n\ninteger(c_int) :: i\n\nreal(c_float) :: r, s(5)\n\nprint *, (c_sizeof(s)/c_sizeof(r) == 5)\n\nend\n\n```\n\n     \nThe example will print `.TRUE.` unless you are using a platform\nwhere default `REAL` variables are unusually padded.\n\n\n\n\n### Standard\nFortran 2008\n\n\n\n### Class\nInquiry function of the module `ISO_C_BINDING`\n\n\n### See also\n<a href=\"SIZEOF.html#SIZEOF\">SIZEOF</a>, <a href=\"STORAGE_005fSIZE.html#STORAGE_005fSIZE\">STORAGE_SIZE</a>\n"}