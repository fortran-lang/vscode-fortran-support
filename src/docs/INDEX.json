{"keyword":"INDEX","docstr":"`INDEX` â€” Position of a substring within a string\n\n### Description\nReturns the position of the start of the first occurrence of string\n`SUBSTRING` as a substring in `STRING`, counting from one.  If\n`SUBSTRING` is not present in `STRING`, zero is returned.  If\nthe `BACK` argument is present and true, the return value is the\nstart of the last occurrence rather than the first.\n\n\n\n### Syntax\n`RESULT = INDEX(STRING, SUBSTRING [, BACK [, KIND]])`\n\n\n### Arguments\n\n     \n, with\n`INTENT(IN)`<br>\n | `SUBSTRING`  | Shall be a scalar `CHARACTER`, with\n`INTENT(IN)`<br>\n | `BACK`  | (Optional) Shall be a scalar `LOGICAL`, with\n`INTENT(IN)`<br>\n | `KIND`  | (Optional) An `INTEGER` initialization\nexpression indicating the kind parameter of the result.\n\n\n\n\n\n\n### Return value\nThe return value is of type `INTEGER` and of kind `KIND`. If\n`KIND` is absent, the return value is of default integer kind.\n\n\n\n### Specific names\n\n     \n | Name                             | Argument            | Return type        | Standard\n\n | `INDEX(STRING, SUBSTRING)`  | `CHARACTER`    | `INTEGER(4)`  | Fortran 77 and later\n\n\n\n\n\n\n### Standard\nFortran 77 and later, with `KIND` argument Fortran 2003 and later\n\n\n\n### Class\nElemental function\n\n\n\n### See also\n<a href=\"SCAN.html#SCAN\">SCAN</a>, <a href=\"VERIFY.html#VERIFY\">VERIFY</a>\n"}