{"keyword":"C_F_POINTER","docstr":"`C_F_POINTER` — Convert C into Fortran pointer\n\n### Description\n`C_F_POINTER(CPTR, FPTR[, SHAPE])` assigns the target of the C pointer\n`CPTR` to the Fortran pointer `FPTR` and specifies its shape.\n\n\n\n### Syntax\n`CALL C_F_POINTER(CPTR, FPTR[, SHAPE])`\n\n\n### Arguments\n\n     \n. It is\n`INTENT(IN)`. \n\n | `FPTR`   | pointer interoperable with `cptr`. It is\n`INTENT(OUT)`. \n\n | `SHAPE`  | (Optional) Rank-one array of type `INTEGER`with `INTENT(IN)`. It shall be present\nif and only if `fptr` is an array. The size\nmust be equal to the rank of `fptr`.\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nprogram main\n\n  use iso_c_binding\n\n  implicit none\n\n  interface\n\n    subroutine my_routine(p) bind(c,name='myC_func')\n\n      import :: c_ptr\n\n      type(c_ptr), intent(out) :: p\n\n    end subroutine\n\n  end interface\n\n  type(c_ptr) :: cptr\n\n  real,pointer :: a(:)\n\n  call my_routine(cptr)\n\n  call c_f_pointer(cptr, a, [12])\n\nend program main\n\n```\n\n\n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nSubroutine\n\n\n\n### See also\n<a href=\"C_005fLOC.html#C_005fLOC\">C_LOC</a>, <a href=\"C_005fF_005fPROCPOINTER.html#C_005fF_005fPROCPOINTER\">C_F_PROCPOINTER</a>\n"}