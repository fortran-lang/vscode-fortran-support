{"keyword":"ABS","docstr":"`ABS` — Absolute value\n\n### Description\n`ABS(A)` computes the absolute value of `A`.\n\n\n\n### Syntax\n`RESULT = ABS(A)`\n\n\n### Arguments\n\n     \n,\n`REAL`, or `COMPLEX`.\n\n\n\n\n\n\n### Return value\nThe return value is of the same type and\nkind as the argument except the return value is `REAL` for a\n`COMPLEX` argument.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_abs\n\n  integer :: i = -1\n\n  real :: x = -1.e0\n\n  complex :: z = (-1.e0,0.e0)\n\n  i = abs(i)\n\n  x = abs(x)\n\n  x = abs(z)\n\nend program test_abs\n\n```\n\n\n\n### Specific names\n\n     \n | Name             | Argument             | Return type        | Standard\n\n | `ABS(A)`    | `REAL(4) A`     | `REAL(4)`     | Fortran 77 and later\n\n | `CABS(A)`   | `COMPLEX(4) A`  | `REAL(4)`     | Fortran 77 and later\n\n | `DABS(A)`   | `REAL(8) A`     | `REAL(8)`     | Fortran 77 and later\n\n | `IABS(A)`   | `INTEGER(4) A`  | `INTEGER(4)`  | Fortran 77 and later\n\n | `ZABS(A)`   | `COMPLEX(8) A`  | `COMPLEX(8)`  | GNU extension\n\n | `CDABS(A)`  | `COMPLEX(8) A`  | `COMPLEX(8)`  | GNU extension\n\n\n\n\n\n### Standard\nFortran 77 and later, has overloads that are GNU extensions\n\n\n\n### Class\nElemental function\n\n\n"}