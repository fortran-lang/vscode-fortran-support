{"keyword":"CO_MIN","docstr":"`CO_MIN` — Minimal value on the current set of images\n\n### Description\n`CO_MIN` determines element-wise the minimal value of `A` on all\nimages of the current team.  If `RESULT_IMAGE` is present, the minimal\nvalues are returned in `A` on the specified image only and the value\nof `A` on the other images become undefined.  If `RESULT_IMAGE` is\nnot present, the value is returned on all images.  If the execution was\nsuccessful and `STAT` is present, it is assigned the value zero.  If the\nexecution failed, `STAT` gets assigned a nonzero value and, if present,\n`ERRMSG` gets assigned a value describing the occurred error.\n\n\n\n### Syntax\n`CALL CO_MIN(A [, RESULT_IMAGE, STAT, ERRMSG])`\n\n\n### Arguments\n\n     \n | `A`             | shall be an integer, real or character variable,\nwhich has the same type and type parameters on all images of the team. \n\n | `RESULT_IMAGE`  | (optional) a scalar integer expression; if\npresent, it shall have the same the same value on all images and refer to an\nimage of the current team. \n\n | `STAT`          | (optional) a scalar integer variable\n\n | `ERRMSG`        | (optional) a scalar character variable\n\n\n\n\n\n\n### Example\n\n     ```\n\n\nprogram test\n\n  integer :: val\n\n  val = this_image ()\n\n  call co_min (val, result_image=1)\n\n  if (this_image() == 1) then\n\n    write(*,*) \"Minimal value\", val  ! prints 1\n\n  end if\n\nend program test\n\n```\n\n\n\n### Standard\nTechnical Specification (TS) 18508 or later\n\n\n\n### Class\nCollective subroutine\n\n\n\n### See also\n<a href=\"CO_005fMAX.html#CO_005fMAX\">CO_MAX</a>, <a href=\"CO_005fSUM.html#CO_005fSUM\">CO_SUM</a>, <a href=\"CO_005fREDUCE.html#CO_005fREDUCE\">CO_REDUCE</a>, <a href=\"CO_005fBROADCAST.html#CO_005fBROADCAST\">CO_BROADCAST</a>\n"}