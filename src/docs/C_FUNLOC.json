{"keyword":"C_FUNLOC","docstr":"`C_FUNLOC` — Obtain the C address of a procedure\n\n### Description\n`C_FUNLOC(x)` determines the C address of the argument.\n\n\n\n### Syntax\n`RESULT = C_FUNLOC(x)`\n\n\n### Arguments\n\n     \n | `x`  | Interoperable function or pointer to such function.\n\n\n\n\n\n\n### Return value\nThe return value is of type `C_FUNPTR` and contains the C address\nof the argument.\n\n\n\n### Example\n\n     ```\n\n\nmodule x\n\n  use iso_c_binding\n\n  implicit none\n\ncontains\n\n  subroutine sub(a) bind(c)\n\n    real(c_float) :: a\n\n    a = sqrt(a)+5.0\n\n  end subroutine sub\n\nend module x\n\nprogram main\n\n  use iso_c_binding\n\n  use x\n\n  implicit none\n\n  interface\n\n    subroutine my_routine(p) bind(c,name='myC_func')\n\n      import :: c_funptr\n\n      type(c_funptr), intent(in) :: p\n\n    end subroutine\n\n  end interface\n\n  call my_routine(c_funloc(sub))\n\nend program main\n\n```\n\n\n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nInquiry function\n\n\n\n### See also\n<a href=\"C_005fASSOCIATED.html#C_005fASSOCIATED\">C_ASSOCIATED</a>, <a href=\"C_005fLOC.html#C_005fLOC\">C_LOC</a>, <a href=\"C_005fF_005fPOINTER.html#C_005fF_005fPOINTER\">C_F_POINTER</a>, <a href=\"C_005fF_005fPROCPOINTER.html#C_005fF_005fPROCPOINTER\">C_F_PROCPOINTER</a>\n"}