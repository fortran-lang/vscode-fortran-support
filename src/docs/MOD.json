{"keyword":"MOD","docstr":"`MOD` — Remainder function\n\n### Description\n`MOD(A,P)` computes the remainder of the division of A by P.\n\n\n\n### Syntax\n`RESULT = MOD(A, P)`\n\n\n### Arguments\n\n     \n. \n\n | `P`  | Shall be a scalar of the same type and kind as `A`\nand not equal to zero.\n\n\n\n\n\n\n### Return value\nThe return value is the result of `A - (INT(A/P) * P)`. The type\nand kind of the return value is the same as that of the arguments. The\nreturned value has the same sign as A and a magnitude less than the\nmagnitude of P.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_mod\n\n  print *, mod(17,3)\n\n  print *, mod(17.5,5.5)\n\n  print *, mod(17.5d0,5.5)\n\n  print *, mod(17.5,5.5d0)\n\n\n  print *, mod(-17,3)\n\n  print *, mod(-17.5,5.5)\n\n  print *, mod(-17.5d0,5.5)\n\n  print *, mod(-17.5,5.5d0)\n\n\n  print *, mod(17,-3)\n\n  print *, mod(17.5,-5.5)\n\n  print *, mod(17.5d0,-5.5)\n\n  print *, mod(17.5,-5.5d0)\n\nend program test_mod\n\n```\n\n\n\n### Specific names\n\n     \n | Name              | Arguments           | Return type     | Standard\n\n | `MOD(A,P)`   | `INTEGER A,P`  | `INTEGER`  | Fortran 95 and later\n\n | `AMOD(A,P)`  | `REAL(4) A,P`  | `REAL(4)`  | Fortran 95 and later\n\n | `DMOD(A,P)`  | `REAL(8) A,P`  | `REAL(8)`  | Fortran 95 and later\n\n\n\n\n\n\n### Standard\nFortran 77 and later\n\n\n\n### Class\nElemental function\n\n\n\n### See also\n<a href=\"MODULO.html#MODULO\">MODULO</a>\n\n   "}