{"keyword":"CMPLX","docstr":"`CMPLX` — Complex conversion function\n\n### Description\n`CMPLX(X [, Y [, KIND]])` returns a complex number where `X` is converted to\nthe real component.  If `Y` is present it is converted to the imaginary\ncomponent.  If `Y` is not present then the imaginary component is set to\n0.0.  If `X` is complex then `Y` must not be present.\n\n\n\n### Syntax\n`RESULT = CMPLX(X [, Y [, KIND]])`\n\n\n### Arguments\n\n     \n,\nor `COMPLEX`. \n\n | `Y`  | (Optional; only allowed if `X` is not\n`COMPLEX`.)  May be `INTEGER` or `REAL`. \n\n | `KIND`  | (Optional) An `INTEGER` initialization\nexpression indicating the kind parameter of the result.\n\n\n\n\n\n\n### Return value\nThe return value is of `COMPLEX` type, with a kind equal to\n`KIND` if it is specified.  If `KIND` is not specified, the\nresult is of the default `COMPLEX` kind, regardless of the kinds of\n`X` and `Y`.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_cmplx\n\n    integer :: i = 42\n\n    real :: x = 3.14\n\n    complex :: z\n\n    z = cmplx(i, x)\n\n    print *, z, cmplx(x)\n\nend program test_cmplx\n\n```\n\n\n\n### Standard\nFortran 77 and later\n\n\n\n### Class\nElemental function\n\n\n\n### See also\n<a href=\"COMPLEX.html#COMPLEX\">COMPLEX</a>\n"}