{"keyword":"MOVE_ALLOC","docstr":"`MOVE_ALLOC` — Move allocation from one object to another\n\n### Description\n`MOVE_ALLOC(FROM, TO)` moves the allocation from `FROM` to\n`TO`.  `FROM` will become deallocated in the process.\n\n\n\n### Syntax\n`CALL MOVE_ALLOC(FROM, TO)`\n\n\n### Arguments\n\n     \n, may be\nof any type and kind. \n\n | `TO`  | `ALLOCATABLE`, `INTENT(OUT)`, shall be\nof the same type, kind and rank as `FROM`.\n\n\n\n\n\n\n### Return value\nNone\n\n\n\n### Example\n\n     ```\n\n\nprogram test_move_alloc\n\n    integer, allocatable :: a(:), b(:)\n\n\n    allocate(a(3))\n\n    a = [ 1, 2, 3 ]\n\n    call move_alloc(a, b)\n\n    print *, allocated(a), allocated(b)\n\n    print *, b\n\nend program test_move_alloc\n\n```\n\n     \n\n### Standard\nFortran 2003 and later\n\n\n\n### Class\nPure subroutine\n\n\n"}