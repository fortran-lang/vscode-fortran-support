{"keyword":"IAND","docstr":"`IAND` — Bitwise logical and\n\n### Description\nBitwise logical `AND`.\n\n\n\n### Syntax\n`RESULT = IAND(I, J)`\n\n\n### Arguments\n\n     \n. \n\n | `J`  | The type shall be `INTEGER`, of the same\nkind as `I`.  (As a GNU extension, different kinds are also\npermitted.)\n\n\n\n\n\n\n### Return value\nThe return type is `INTEGER`, of the same kind as the\narguments.  (If the argument kinds differ, it is of the same kind as\nthe larger argument.)\n\n\n\n### Example\n\n     ```\n\n\nPROGRAM test_iand\n\n  INTEGER :: a, b\n\n  DATA a / Z'F' /, b / Z'3' /\n\n  WRITE (*,*) IAND(a, b)\n\nEND PROGRAM\n\n```\n\n\n\n### Standard\nFortran 95 and later\n\n\n\n### Class\nElemental function\n\n\n\n### See also\n<a href=\"IOR.html#IOR\">IOR</a>, <a href=\"IEOR.html#IEOR\">IEOR</a>, <a href=\"IBITS.html#IBITS\">IBITS</a>, <a href=\"IBSET.html#IBSET\">IBSET</a>, <a href=\"IBCLR.html#IBCLR\">IBCLR</a>, <a href=\"NOT.html#NOT\">NOT</a>\n\n   "}