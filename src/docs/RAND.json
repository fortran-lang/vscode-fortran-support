{"keyword":"RAND","docstr":"`RAND` — Real pseudo-random number\n\n### Description\n`RAND(FLAG)` returns a pseudo-random number from a uniform\ndistribution between 0 and 1. If `FLAG` is 0, the next number\nin the current sequence is returned; if `FLAG` is 1, the generator\nis restarted by `CALL SRAND(0)`; if `FLAG` has any other value,\nit is used as a new seed with `SRAND`.\n\n     \nThis intrinsic routine is provided for backwards compatibility with\nGNU Fortran 77. It implements a simple modulo generator as provided\nby *g77*. For new code, one should consider the use of\n<a href=\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\">RANDOM_NUMBER</a> as it implements a superior algorithm.\n\n\n\n\n### Syntax\n`RESULT = RAND(I)`\n\n\n### Arguments\n\n     \n of kind 4.\n\n\n\n\n\n\n### Return value\nThe return value is of `REAL` type and the default kind.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_rand\n\n  integer,parameter :: seed = 86456\n\n\n  call srand(seed)\n\n  print *, rand(), rand(), rand(), rand()\n\n  print *, rand(seed), rand(), rand(), rand()\n\nend program test_rand\n\n```\n\n\n\n### Standard\nGNU extension\n\n\n\n### Class\nFunction\n\n\n\n### See also\n<a href=\"SRAND.html#SRAND\">SRAND</a>, <a href=\"RANDOM_005fNUMBER.html#RANDOM_005fNUMBER\">RANDOM_NUMBER</a>\n\n   "}