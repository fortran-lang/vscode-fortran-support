{"keyword":"AINT","docstr":"`AINT` — Truncate to a whole number\n\n### Description\n`AINT(A [, KIND])` truncates its argument to a whole number.\n\n\n\n### Syntax\n`RESULT = AINT(A [, KIND])`\n\n\n### Arguments\n\n     \n. \n\n | `KIND`  | (Optional) An `INTEGER` initialization\nexpression indicating the kind parameter of the result.\n\n\n\n\n\n\n### Return value\nThe return value is of type `REAL` with the kind type parameter of the\nargument if the optional `KIND` is absent; otherwise, the kind\ntype parameter will be given by `KIND`.  If the magnitude of\n`X` is less than one, `AINT(X)` returns zero.  If the\nmagnitude is equal to or greater than one then it returns the largest\nwhole number that does not exceed its magnitude.  The sign is the same\nas the sign of `X`.\n\n\n\n### Example\n\n     ```\n\n\nprogram test_aint\n\n  real(4) x4\n\n  real(8) x8\n\n  x4 = 1.234E0_4\n\n  x8 = 4.321_8\n\n  print *, aint(x4), dint(x8)\n\n  x8 = aint(x4,8)\n\nend program test_aint\n\n```\n\n\n\n### Specific names\n\n     \n | Name            | Argument          | Return type       | Standard\n\n | `AINT(A)`  | `REAL(4) A`  | `REAL(4)`    | Fortran 77 and later\n\n | `DINT(A)`  | `REAL(8) A`  | `REAL(8)`    | Fortran 77 and later\n\n\n\n\n\n### Standard\nFortran 77 and later\n\n\n\n### Class\nElemental function\n\n\n"}