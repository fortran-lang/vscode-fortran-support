{"keyword":"PARITY","docstr":"`PARITY` — Reduction with exclusive OR\n\n### Description\nCalculates the parity, i.e. the reduction using `.XOR.`,\nof `MASK` along dimension `DIM`.\n\n\n\n### Syntax\n\n     \n\n\n\n\n\n\n\n### Arguments\n\n     \n\n\n | `DIM`    | (Optional) shall be a scalar of type\n`INTEGER` with a value in the range from 1 to n, where n\nequals the rank of `MASK`.\n\n\n\n\n\n\n### Return value\nThe result is of the same type as `MASK`.\n\n     \nIf `DIM` is absent, a scalar with the parity of all elements in\n`MASK` is returned, i.e. true if an odd number of elements is\n`.true.` and false otherwise.  If `DIM` is present, an array\nof rank n-1, where n equals the rank of `ARRAY`,\nand a shape similar to that of `MASK` with dimension `DIM`\ndropped is returned.\n\n\n\n\n### Example\n\n     ```\n\n\nPROGRAM test_sum\n\n  LOGICAL :: x(2) = [ .true., .false. ]\n\n  print *, PARITY(x) ! prints \"T\" (true).\n\nEND PROGRAM\n\n```\n\n     \n\n### Standard\nFortran 2008 and later\n\n\n\n### Class\nTransformational function\n\n\n"}